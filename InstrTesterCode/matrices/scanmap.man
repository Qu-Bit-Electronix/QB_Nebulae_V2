The xscanmap opcodeSYNTAX:kpos, kvel   xscanmap   id, kpamp, kvamp[, kwhich]Note: kwhich is taken as zero if not givenAction is to read internal state of scan-processed id, and from nodekwhich returns position - displacement and velocity each with its ownamplification.  The action is totally non-destructive, so many callscan be made if different points are required.  Also, kwhich is ak-rated variable.EXAMPLE:<CsoundSynthesizer><CsOptions></CsOptions><CsInstruments>  sr        =           44100  kr        =           441  ksmps     =           100  nchnls    =           2; Plain scanned syntnesisinstr 1  a0        =           0            xscanu      1, .01, 6, 2, "str_128", 4, 5, \                        2, .1, .1, -.01, .1, .5, 0, 0, a0, p5, 0  a1        xscans      30000, cpspch(p4), 7, 0, 1k1,k2       xscanmap    0, 1000, 1000, 0            display     k1,1            display     k2,1            outs        a1, a1endin; Scan synthesis with audio injection and dual scan pathsinstr 2  a0,aa        ins  a0        =           a0/30000	    xscanu	1, .01, 6, 2, "cyl_128,8", 14, 5, \			2, .01, .05, -.05, .1, .5, 0, 0, a0, 1, 0  a1     xscans      5000, cpspch(5.00), 7, 0, 2  a2     xscans      5000, cpspch(6.00), 77, 0, 3  k1,k2  xscanmap       0, 1000, 1000, 100            display k1, 1            outs        a1,a2endin </CsInstruments><CsScore>; Initial condition;f1 0 16 7 0 8 1 8 0f1 0 128 7 0 64 1 64 0; Massesf2 0 128 -7 1 128 1; Centering forcef4  0 128 -7 0 128 2f14 0 128 -7 2 64 0 64 2; Dampingf5 0 128 -7 1 128 1; Initial velocityf6 0 128 -7 -.0 128 .0; Trajectoriesf7 0 128 -5 .001 128 128f77 0 128 -23 "spiral-8,16,128,2,1over2"; Sinef9 0 1024 10 1; Note listi1 0 10 6.00 1                                  si2 0 10e</CsScore></CsoundSynthesizer>